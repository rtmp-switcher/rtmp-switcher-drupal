<?php

// $Id$

/**
 * @file
 * General functions
 */
function rtmpswitcher_menu() {

  $items['admin/settings/rtmpswitcher'] = array(
    'title' => 'RTMP Video Switcher',
    'description' => 'Configure RTMP Video Switcher',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('rtmpswitcher_settings'),
    'access callback' => 'user_access',
    'access arguments' => array('administer site configuration'),
  );

  $items['rtmpswitcher'] = array(
    'title' => t('RTMP Video Switcher'),
    'page callback' => 'channel_list',
    'access callback' => 'user_access',
    'access arguments' => array('administer site configuration'),
  );

  $items['rtmpswitcher/list'] = array(
    'title' => t('Channels list'),
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => 1,
  );

  $items['rtmpswitcher/addchannel'] = array(
    'title' => t('Add channel'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('channel_form'),
    'access callback' => 'user_access',
    'access arguments' => array('administer site configuration'),
    'type' => MENU_LOCAL_TASK,
    'weight' => 2,
  );

  $items['rtmpswitcher/%channel/edit'] = array(
    'title' => t('Edit channel'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('channel_form', 1),
    'access callback' => 'user_access',
    'access arguments' => array('administer site configuration'),
    'type' => MENU_CALLBACK,
  );

  $items['rtmpswitcher/%channel/delete'] = array(
    'title' => t('Delete channel'),
    'page callback' => 'channel_delete',
    'page arguments' => array(1),
    'access callback' => 'user_access',
    'access arguments' => array('administer site configuration'),
    'type' => MENU_CALLBACK,
  );

  $items['rtmpswitcher/%channel/video_switch'] = array(
    'title' => t('Video switch'),
    'page callback' => 'video_switch',
    'page arguments' => array(1),
    'access callback' => 'user_access',
    'access arguments' => array('administer site configuration'),
    'type' => MENU_CALLBACK,
  );

  $items['rtmpswitcher/switch'] = array(
    'title' => t('Video switch'),
    'page callback' => 'video_switch_handle',
    'page arguments' => array(1),
    'access callback' => 'user_access',
//    'access callback' => TRUE,
    'access arguments' => array('administer site configuration'),
    'type' => MENU_CALLBACK,
  );

  return $items;
}

function rtmpswitcher_settings() {

  $form['rtmpswitcher_tasks_dir'] = array(
    '#title' => t('Task directory'),
    '#description' => t('Path to directory for task. <a href="https://github.com/rtmp-switcher/backend/wiki/Communication-protocol-between-Web-frontend-and-Video-switcher-backend">See</a>'),
    '#type' => 'textfield',
    '#default_value' => variable_get('rtmpswitcher_tasks_dir', '/tmp/rtpmswitcher-tasks'),
    '#required' => TRUE,
  );

  return system_settings_form($form);
  ;
}

function channel_list() {
  try {
    db_set_active('video_switch');
    $res = db_query(
        "select " .
        "channels.id as id, channels.name as name, channels.is_enabled as is_enabled, channels.comment as comment, channel_types.chan_type as chan_type, channels.uri as uri, channels.embed_html as embed_html " .
        "from channels " .
        "join channel_types on channel_types.id=channels.chan_type;");

    foreach ($res as $row) {
      $data[] = $row;
    }
    db_set_active('default');

    $tableHeader = array(t('Video'), t('Name'), t('Type'), t('Description'), t('Actions'));
    $tableData = array();

    foreach ($data as $ch) {
      $actions = array(
        l(t('edit'), 'rtmpswitcher/' . $ch->id . '/edit'),
        l(t('delete'), 'rtmpswitcher/' . $ch->id . '/delete', array('query' => array('token' => drupal_get_token('channel-' . $ch->id)))),
      );
      if ($ch->chan_type == 'RTMP_OUT') {
        $actions[] = l(t('video'), 'rtmpswitcher/' . $ch->id . '/video_switch');
      }

      $tableData[] = array(
        'data' => array(
          $ch->embed_html,
          l($ch->name, $ch->uri),
          $ch->chan_type,
          $ch->comment,
          implode(' | ', $actions)
        ),
        'id' => array('ch-' . $ch->id),
      );
    }

    return theme('table', array('header' => $tableHeader, 'rows' => $tableData));
  } catch (Exception $e) {
    db_set_active('default');
  }
}

function create_task_connect($ch_out, $ch_in) {
  $dir = variable_get('rtmpswitcher_tasks_dir');
  $data = array($ch_in, $ch_out);
  file_put_contents($dir . '/CONNECT-' . time() . rand(0, 1000) . '.task', json_encode($data));
}

function channel_form($form, &$form_state, $ch = null) {
  db_set_active('video_switch');
  $res = db_query("select * from channel_types;");

  foreach ($res as $row) {
    $channel_types[$row->id] = $row->chan_type;
  }
  db_set_active('default');

  $form['name'] = array(
    '#title' => t('Name'),
//    '#description' => t('Channel name'),
    '#type' => 'textfield',
    '#default_value' => $ch ? $ch->name : '',
    '#required' => true,
  );

  $form['chan_type'] = array(
    '#title' => t('Type'),
//    '#description' => t('Channel type'),
    '#type' => 'select',
    '#options' => $channel_types,
    '#default_value' => $ch ? $ch->chan_type : 1,
    '#required' => true,
  );

  $form['uri'] = array(
    '#title' => t('URI'),
//    '#description' => t('Channel URI'),
    '#type' => 'textfield',
    '#default_value' => $ch ? $ch->uri : '',
    '#required' => true,
  );

  $form['comment'] = array(
    '#title' => t('Comment'),
//    '#description' => t('Channel description'),
    '#type' => 'textfield',
    '#default_value' => $ch ? $ch->comment : '',
  );

  $form['embed_html'] = array(
    '#title' => t('HTML code of embedded player'),
//    '#description' => t('Channel description'),
    '#type' => 'textarea',
    '#default_value' => $ch ? $ch->embed_html : '',
  );

  $form['disable'] = array(
    '#title' => t('Disable channel'),
//    '#description' => t('Disable channel monitoring'),
    '#type' => 'checkbox',
    '#default_value' => $ch ? !$ch->is_enabled : false,
  );

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => $ch ? t('Save') : t('Add'),
  );

  if ($ch) {
    $form['id'] = array(
      '#type' => 'value',
      '#value' => $ch->id,
    );
  }
  else {
    $form['id'] = array(
      '#type' => 'value',
      '#value' => NULL,
    );
  }

  return $form;
}

function channel_form_submit($form, &$form_state) {
  $ch = array(
    'name' => $form_state['values']['name'],
    'chan_type' => $form_state['values']['chan_type'],
    'comment' => $form_state['values']['comment'],
    'uri' => $form_state['values']['uri'],
    'embed_html' => $form_state['values']['embed_html'],
    'is_enabled' => (int) (!$form_state['values']['disable']),
  );
  $chId = $form_state['values']['id'];

  try {
    db_set_active('video_switch');
    if ($chId) {
      db_update('channels')->fields($ch)->condition('id', $chId, '=')
          ->execute();
    }
    else {
      db_insert('channels')->fields($ch)->execute();
    }
    db_set_active('default');
  } catch (Exception $e) {
    db_set_active('default');
    return NULL;
  }

  drupal_set_message(t('Channel submitted'));

  drupal_goto('rtmpswitcher');
}

function channel_delete($ch) {

  if (!drupal_valid_token($_GET['token'], 'channel-' . $ch->id)) {
    return drupal_access_denied();
  }

  try {
    db_set_active('video_switch');
    $ret = db_query("delete  FROM {channels}  where {channels}.id = :id", array(':id' => $ch->id));
    db_set_active('default');
  } catch (Exception $e) {
    db_set_active('default');
    return NULL;
  }

  drupal_set_message(t('Channel deleted'));
  drupal_goto('rtmpswitcher');
}

function video_switch($chOut) {
  drupal_add_js(drupal_get_path('module', 'rtmpswitcher') . '/js/video_switch.js', 'file');
  try {
    db_set_active('video_switch');
    $res = db_query(
        "select " .
        "channels.id as id, channels.name as name, channels.is_enabled as is_enabled, channels.comment as comment, channel_types.chan_type as chan_type, channels.uri as uri, channels.embed_html as embed_html " .
        "from channels " .
        "join channel_types on channel_types.id=channels.chan_type " .
        'where channel_types.chan_type=\'RTMP_IN\';');

    foreach ($res as $row) {
      $data[] = $row;
    }
    db_set_active('default');

    $tableData = array();

    foreach ($data as $ch) {

      $tableData[] = array(
        'data' => array(
          $ch->embed_html,
          $ch->name,
          $ch->comment,
        ),
        'id' => array('ch-' . $ch->id),
        'onclick' => 'javascript: video_switch("' .
          url('rtmpswitcher/switch', array('query' => array('chout' => $chOut->id, 'chin' => $ch->id))) . 
          '", "'. 'ch-'. $ch->id . '")',
        'style' => 'cursor:hand;cursor:pointer'
      );
    }
    
    drupal_set_title(t('Manage channel: ' . $chOut->name));
    $outch_html = '<div id="ch-out">' . $chOut->embed_html . '</div>';

    return $outch_html . theme('table', array(
          'rows' => $tableData,
          'attributes' => array(
            'id' => 'channels-table')));
  } catch (Exception $e) {
    db_set_active('default');
  }
}

function channel_load($id) {
  try {
    db_set_active('video_switch');
    $ret = db_query("SELECT * FROM {channels}  where {channels}.id = :id", array(':id' => $id))->fetchObject();
    db_set_active('default');

    return $ret;
  } catch (Exception $e) {
    db_set_active('default');
    return NULL;
  }
}

function video_switch_handle() {

  $chout = $_GET['chout'];
  $chin = $_GET['chin'];

  create_task_connect($chout, $chin);

  drupal_json_output("create task $chout, $chin");
  exit;
}
